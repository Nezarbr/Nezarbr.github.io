{"version":3,"sources":["webpack:///./src/components/section/index.jsx","webpack:///./src/components/summary-item/index.jsx","webpack:///./src/pages/404.jsx","webpack:///./src/components/blog-posts/index.jsx","webpack:///./src/pages/blog.jsx"],"names":["classes","wrapper","title","heading","content","Section","_ref","children","id","React","createElement","className","href","link","SummaryItem","linkContent","name","description","internal","Link","to","NotFoundPage","Layout","SEO","BlogPosts","posts","map","post","key","node","fields","slug","frontmatter","Index","data","allMarkdownRemark","edges","noBlog","length","Header","metadata","site","siteMetadata","NotFound"],"mappings":"6FAAA,yBAEA,MAAMA,EAAU,CACdC,QAAS,sBACTC,MAAO,qCACPC,QACE,oFACFC,QAAS,iEAkBIC,IAfCC,IAA8B,IAA7B,MAAEJ,EAAK,SAAEK,EAAQ,GAAEC,GAAIF,EACtC,OACEG,IAAAC,cAAA,OAAKC,UAAWX,EAAQC,QAASO,GAAIA,GACnCC,IAAAC,cAAA,OAAKC,UAAWX,EAAQE,OACtBO,IAAAC,cAAA,MAAIC,UAAWX,EAAQG,SACrBM,IAAAC,cAAA,KAAGE,KAAM,IAAIJ,EAAMG,UAAWX,EAAQa,MACnCX,KAIPO,IAAAC,cAAA,OAAKC,UAAWX,EAAQI,SAAUG,M,kCCpBxC,qCAGA,MAAMP,EACK,OADLA,EAEE,mCAFFA,EAGS,mCAyBAc,IAtBKR,IAA4D,IAC1ES,GADe,KAAEC,EAAI,YAAEC,EAAW,KAAEJ,GAAO,EAAK,SAAEK,GAAW,GAAOZ,EAQxE,OALES,EADEG,EACYT,IAAAC,cAACS,OAAI,CAACC,GAAIP,GAAOG,GAEjBP,IAAAC,cAAA,KAAGE,KAAMC,GAAOG,GAI9BP,IAAAC,cAAA,OAAKC,UAAWX,GACdS,IAAAC,cAAA,MACEC,UAAW,GAAGX,KACZa,EAAO,mCAAqC,MAG7CA,EAAOE,EAAcC,GAExBP,IAAAC,cAAA,KAAGC,UAAWX,GAAsBiB,M,kCC1B1C,oEAMA,MAAMjB,EACG,oBADHA,EAEE,YAiBOqB,UAdMA,IACnBZ,IAAAC,cAACY,IAAM,KACLb,IAAAC,cAACa,IAAG,CAACrB,MAAM,cACXO,IAAAC,cAAA,MAAIC,UAAWX,GAAe,kBAC9BS,IAAAC,cAAA,SAAG,2CACwC,IACzCD,IAAAC,cAACS,OAAI,CAACR,UAAWX,EAAcoB,GAAG,KAAI,oBAE/B,O,4FCIEI,MAlBGlB,IAAgB,IAAf,MAAEmB,GAAOnB,EAC1B,OACEG,IAAAC,cAACL,IAAO,CAACH,MAAM,kBACZuB,EAAMC,IAAKC,GACVlB,IAAAC,cAAA,OAAKkB,IAAKD,EAAKE,KAAKC,OAAOC,KAAMpB,UAAU,QACzCF,IAAAC,cAACI,IAAW,CACVE,KAAMW,EAAKE,KAAKG,YAAY9B,MAC5Be,YAAaU,EAAKE,KAAKG,YAAYf,YACnCJ,KAAMc,EAAKE,KAAKC,OAAOC,KACvBb,UAAQ,IAEVT,IAAAC,cAAA,KAAGC,UAAU,yBAAwB,mD,gDCUhCsB,UAjBD3B,IAAe,IAAd,KAAE4B,GAAM5B,EACrB,MAAMmB,EAAQS,EAAKC,kBAAkBC,MAC/BC,GAAUZ,IAAUA,EAAMa,OAEhC,OAAKb,GAAUA,EAAMa,OAKnB7B,IAAAC,cAACY,IAAM,KACLb,IAAAC,cAACa,IAAG,CAACrB,MAAM,SACXO,IAAAC,cAAC6B,IAAM,CAACC,SAAUN,EAAKO,KAAKC,gBAC1BL,GAAU5B,IAAAC,cAACc,EAAS,CAACC,MAAOA,KAPzBhB,IAAAC,cAACiC,UAAQ","file":"component---src-pages-blog-jsx-7f7a197a05ce713b7a11.js","sourcesContent":["import React from 'react';\n\nconst classes = {\n  wrapper: 'block pt-12 md:flex',\n  title: 'pb-6 md:w-full md:max-w-150 md:p-0',\n  heading:\n    'font-xs font-light tracking-widest text-sm text-gray-600 leading-normal uppercase',\n  content: 'flex-none text-lg text-gray-600 font-light md:flex-1 md:pl-20', // Style for the link\n};\n\nconst Section = ({ title, children, id }) => {\n  return (\n    <div className={classes.wrapper} id={id}>\n      <div className={classes.title}>\n        <h2 className={classes.heading}>\n          <a href={`#${id}`} className={classes.link}>\n            {title}\n          </a>\n        </h2>\n      </div>\n      <div className={classes.content}>{children}</div>\n    </div>\n  );\n};\n\nexport default Section;\n","import { Link } from 'gatsby';\nimport React from 'react';\n\nconst classes = {\n  wrapper: 'mb-6',\n  name: 'font-semibold text-gray-900 pb-1',\n  description: 'text-md text-gray-600 font-light',\n};\n\nconst SummaryItem = ({ name, description, link = false, internal = false }) => {\n  let linkContent;\n  if (internal) {\n    linkContent = <Link to={link}>{name}</Link>;\n  } else {\n    linkContent = <a href={link}>{name}</a>;\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <h3\n        className={`${classes.name} ${\n          link ? 'hover:underline hover:text-black' : ''\n        }`}\n      >\n        {link ? linkContent : name}\n      </h3>\n      <p className={classes.description}>{description}</p>\n    </div>\n  );\n};\n\nexport default SummaryItem;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst classes = {\n  title: 'text-lg font-bold',\n  link: 'underline',\n};\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"Not found\" />\n    <h1 className={classes.title}>404: Not Found</h1>\n    <p>\n      You just hit a route that doesn't exist.{' '}\n      <Link className={classes.link} to=\"/\">\n        Return to safety\n      </Link>\n      .\n    </p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\n\nimport Section from '../section';\nimport SummaryItem from '../summary-item';\n\nconst BlogPosts = ({ posts }) => {\n  return (\n    <Section title=\"All Blog Posts\">\n      {posts.map((post) => (\n        <div key={post.node.fields.slug} className=\"mb-4\">\n          <SummaryItem\n            name={post.node.frontmatter.title}\n            description={post.node.frontmatter.description}\n            link={post.node.fields.slug}\n            internal\n          />\n          <p className=\"text-sm text-gray-500\">Click on the title to access the full post.</p>\n        </div>\n      ))}\n    </Section>\n  );\n};\n\nexport default BlogPosts;\n","import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport BlogPosts from '../components/blog-posts';\nimport Header from '../components/header';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport NotFound from '../pages/404';\n\nconst Index = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges;\n  const noBlog = !posts || !posts.length;\n\n  if (!posts || !posts.length) {\n    return <NotFound />;\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Header metadata={data.site.siteMetadata} />\n      {!noBlog && <BlogPosts posts={posts} />}\n    </Layout>\n  );\n};\n\nexport default Index;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        name\n        title\n        description\n        about\n        author\n        github\n        linkedin\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}